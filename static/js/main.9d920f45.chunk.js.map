{"version":3,"sources":["components/Section/Section.js","components/Feedback/Feedback.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constants.js","components/App.js","index.js","components/Feedback/Feedback.module.scss"],"names":["Section","title","children","FeedbackBtn","feedback","onLeaveFeedback","type","onClick","className","styles","Button","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","shortid","generate","FEEDBACK_OPTIONS","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Feedback","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCFDC,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBACEC,KAAK,SACL,gBAAeF,EACfG,QAASF,EACTG,UAAWC,IAAOC,OAJpB,SAMGN,KAoBQO,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASP,EAAsB,EAAtBA,gBAClC,OAAOO,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAEEV,SAAUU,EACVT,gBAAiBA,GAFZS,OCZIC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCuC3BC,EAnCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAIA,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAoCH,IAA3BK,IAAQC,YACjB,2CAAuCL,IAA9BI,IAAQC,YACjB,uCAAmCJ,IAA1BG,IAAQC,YACjB,yCAAqCH,IAA5BE,IAAQC,YACjB,qDACsBF,EADtB,MAASC,IAAQC,eAKV,IAAVH,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BC5B/BS,EAAmB,CAAC,OAAQ,UAAW,OC6DrCC,E,4MApDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,eAAiB,YAAiB,IACxBxB,EADuB,EAAbyB,OACUC,QAApB1B,SACR,EAAK2B,UAAS,SAAAC,GAAS,sBAAQ5B,EAAW4B,EAAU5B,GAAY,O,EAGlE6B,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBc,gCAAkC,WAChC,IAAQhB,EAAS,EAAKS,MAAdT,KAEFG,EAAQ,EAAKY,qBAGnB,OAFeZ,EAAQc,KAAKC,MAAOlB,EAAOG,EAAS,KAAO,G,4CAK5D,WACE,MAA+BgB,KAAKV,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQgB,KAAKJ,qBACbX,EAA6Be,KAAKH,kCAExC,OACE,gCACE,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAACqC,EAAD,CACE1B,QAASa,EACTpB,gBAAiBgC,KAAKT,mBAG1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,2BAA4BA,a,GA7CtBiB,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,OAAS,4B","file":"static/js/main.9d920f45.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport styles from './Feedback.module.scss';\n\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n      className={styles.Button}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option => (\n    <FeedbackBtn\n      key={option}\n      feedback={option}\n      onLeaveFeedback={onLeaveFeedback}\n    />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nimport shortid from 'shortid';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedbackPercentage,\n}) => {\n  // const liNameId = shortid.generate();\n\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li key={shortid.generate()}>Good: {good}</li>\n          <li key={shortid.generate()}>Neutral: {neutral}</li>\n          <li key={shortid.generate()}>Bad: {bad}</li>\n          <li key={shortid.generate()}>Total: {total}</li>\n          <li key={shortid.generate()}>\n            Positive feedback: {positiveFeedbackPercentage}%\n          </li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\n","import React, { Component } from 'react';\n\nimport Section from './Section';\nimport FeedbackOptions from './Feedback';\nimport Statistics from './Statistics';\n\nimport { FEEDBACK_OPTIONS } from '../data/constants';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n\n    const total = this.countTotalFeedback();\n    const result = total ? Math.round((good / total) * 100) : 0;\n    // console.log(result);\n    return result;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedbackPercentage={positiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const link = React.createElement(\n//   'a',\n//   { href: 'reactjs.org', target: '_blank' },\n//   'Ссылочка',\n// );\n\n// const jsxLink = <a href=\"reactjs.org\">СсылочкаJsx</a>;\n\n// // console.log(link);\n// console.log(jsxLink);\n\n// ReactDOM.render(link, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Feedback_Button__1oeuD\"};"],"sourceRoot":""}